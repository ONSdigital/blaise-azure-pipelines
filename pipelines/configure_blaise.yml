---
parameters:
  - name: VarGroup
    displayName: Variable group
  - name: Environment
    displayName: Environment to use
trigger: none
pr: none
variables:
  - group: ${{parameters.VarGroup}}
  - template: /templates/variables.yml
stages:
  - stage: ConfigureBlaise_${{parameters.Environment}}
    displayName: Configure Blaise (${{parameters.Environment}})
    jobs:
      - deployment: UpdateSystemEnvironmentVariables
        displayName: Update system environment variables
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: blaise
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: PowerShell@2
                  inputs:
                    filePath: $(Agent.BuildDirectory)/s/scripts/update_system_environment_variables.ps1
      - deployment: InstallGoogleOpsAgent
        displayName: Install Google Ops Agent
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: blaise
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /templates/install_google_ops_agent.yml
      - deployment: InstallMySqlConnector
        displayName: Install MySQL connector
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: blaise
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /templates/install_mysql_connector.yml
                  parameters:
                    GCP_Bucket: $($env:ENV_BLAISE_GCP_BUCKET)
      - deployment: ConfigureBlaise
        displayName: Configure Blaise
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: blaise
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /templates/configure_blaise.yml
                  parameters:
                    BlaiseLicenseKey: $(ENV_BLAISE_LICENSE_KEY)
                    BlaiseActivationKey: $(ENV_BLAISE_ACTIVATION_CODE)
                - task: PowerShell@2
                  inputs:
                    filePath: $(Agent.BuildDirectory)/s/scripts/blaise/node_roles/configure_node_roles.ps1
                - template: /templates/add_windows_firewall_rules.yml
                  parameters:
                    RuleName: Blaise
                    InboundPorts: 80, 443, $($env:ENV_BLAISE_CONNECTION_PORT), $($env:ENV_BLAISE_REMOTE_CONNECTION_PORT)
                    OutboundPorts: 80, 443, $($env:ENV_BLAISE_CONNECTION_PORT), $($env:ENV_BLAISE_REMOTE_CONNECTION_PORT)
                - template: /templates/set_windows_timezone.yml
      - deployment: ConfigureManagementNode
        displayName: Configure management node
        dependsOn: ConfigureBlaise
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: mgmt
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /templates/configure_management_node.yml
                - template: /templates/add_cma_serverpark.yml
      - deployment: RegisterDataEntryNodes
        condition: eq(variables.ENV_MULTI_NODE, true)
        displayName: Register data entry node
        dependsOn: ConfigureManagementNode
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: data-entry
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /templates/register_node.yml
      - deployment: InstallCmaPackagesOnMultiNode
        condition: eq(variables.ENV_MULTI_NODE, true)
        displayName: Install CMA packages on multi node environment
        dependsOn: RegisterDataEntryNodes
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: mgmt
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /templates/download_cma_packages.yml
                - template: /templates/install_cma_packages.yml
      - deployment: InstallCmaPackagesOnSingleNode
        condition: eq(variables.ENV_MULTI_NODE, false)
        displayName: Install CMA packages on single node environment
        dependsOn: ConfigureManagementNode
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: mgmt
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /templates/download_cma_packages.yml
                - template: /templates/install_cma_packages.yml
      - deployment: ConfigureBlaisesDatabases
        displayName: Configure data interfaces
        dependsOn: ConfigureManagementNode
        environment:
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: mgmt
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /templates/configure_data_interfaces.yml
