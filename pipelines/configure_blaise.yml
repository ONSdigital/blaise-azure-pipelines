parameters:
  - name: VarGroup
    displayName: Variable Group
  - name: Environment
    displayName: Environment to use

trigger: none

pr: none

variables:
  - group: ${{ parameters.VarGroup }}
  - template: /templates/variables.yml

stages:
  - stage: BlaiseInstall_${{parameters.Environment }}
    displayName: ${{parameters.Environment }} Installation Of Blaise
    jobs:
      - deployment: InstallStackDriver
        displayName: Install Stackdriver
        environment:  
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: blaise
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - template: /templates/stackdriver_steps.yml
                parameters:
                  LoggingAgent: $($env:ENV_LOGGING_AGENT)
                  MonitoringAgent: $($env:ENV_MONITORING_AGENT)
                  GCP_Bucket: $($env:ENV_BLAISE_GCP_BUCKET)

      - deployment: InstallMySQLConnector
        displayName: Install MySQL .Net Connector
        environment:  
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: blaise-cli
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - template: /templates/mysql_connector_steps.yml
                parameters:
                  GCP_Bucket: $($env:ENV_BLAISE_GCP_BUCKET)

      - deployment: InstallBlaise
        displayName: Install Blaise
        environment:  
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: blaise
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - template: /templates/configure_blaise_steps.yml
                parameters:
                  BlaiseLicenseKey: $(ENV_BLAISE_LICENSE_KEY)
                  BlaiseActivationKey: $(ENV_BLAISE_ACTIVATION_CODE)          
              - template: /templates/configure_node_roles_steps.yml
              - template: /templates/firewall_rule_steps.yml
                parameters:
                  RuleName: Blaise
                  InboundPorts: 80, 443, $($env:ENV_BLAISE_CONNECTION_PORT), $($env:ENV_BLAISE_REMOTE_CONNECTION_PORT)
                  OutboundPorts: 80, 443, $($env:ENV_BLAISE_CONNECTION_PORT), $($env:ENV_BLAISE_REMOTE_CONNECTION_PORT)
              - template: /templates/set_environment.yml

      - deployment: ManagementSetup
        displayName: Setup blaise management node
        dependsOn: InstallBlaise
        environment:  
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: mgmt
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - template: /templates/blaise_management_steps.yml
              - template: /templates/add_cma_serverpark.yml         

      - deployment: RegisterDataEntryNodes
        condition: eq(variables.ENV_MULTI_NODE, true)
        displayName: Register Data Entry Node
        dependsOn: ManagementSetup
        environment:  
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: data-entry
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - template: /templates/register_node_steps.yml
      
      - deployment: InstallCmaPackagesOnMultiNode
        condition: eq(variables.ENV_MULTI_NODE, true)
        displayName: Install CMA Packages on multi node
        dependsOn: RegisterDataEntryNodes
        environment:  
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: mgmt
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - template: /templates/download_cma_packages.yml
              - template: /templates/install_cma_packages.yml      

      - deployment: InstallCmaPackagesOnSingleNode
        condition: eq(variables.ENV_MULTI_NODE, false)
        displayName: Install CMA Packages on single node
        dependsOn: ManagementSetup
        environment:  
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: mgmt
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - template: /templates/download_cma_packages.yml              
              - template: /templates/install_cma_packages.yml                        

      - deployment: ConfigureBlaisesDatabases
        displayName: Configure Blaises Sql Databases
        dependsOn: ManagementSetup
        environment:  
          name: ${{parameters.Environment}}
          resourceType: virtualMachine
          tags: mgmt
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - template: /templates/configure_blaise_databases.yml


